[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "dask-databricks"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.9"
license = {text = "BSD-3-Clause"}
keywords = []
authors = [
  { name = "Jacob Tomlinson", email = "jacob@tomlinson.email" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "bokeh<=3.2.2",  # Necessary until https://github.com/dask/distributed/issues/8333 is resolved
  "click>=8.1",
  "dask",
  "rich",
  "distributed",
]

[project.urls]
Documentation = "https://github.com/dask-contrib/dask-databricks#readme"
Issues = "https://github.com/dask-contrib/dask-databricks/issues"
Source = "https://github.com/dask-contrib/dask-databricks"

[project.entry-points.dask_cli]
databricks = "dask_databricks.cli:main"

[tool]
rye = { dev-dependencies = [
    "ipy>=1.1",
    "pytest>=7.4.3",
] }

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "dask_databricks/_version.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.7", "3.8", "3.9", "3.10", "3.11"]

[tool.hatch.envs.lint]
detached = true
dependencies = [
  "black>=23.1.0",
  "mypy>=1.0.0",
  "ruff>=0.0.243",
]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:dask_databricks}"
style = [
  "ruff {args:.}",
  "black --check --diff {args:.}",
]
fmt = [
  "black {args:.}",
  "ruff --fix {args:.}",
  "style",
]
all = [
  "style",
  "typing",
]

[tool.hatch.envs.test]
dependencies = [
    "pytest>=7.2.2",
    "pytest-timeout>=2.1.0",
]

[tool.hatch.envs.test.scripts]
run = "pytest"

[tool.black]
target-version = ["py37"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F", "I"]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["I"]
# unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

line-length = 120

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.isort]
known-first-party = ["dask_databricks"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.coverage.run]
source_pkgs = ["dask_databricks", "tests"]
branch = true
parallel = true
omit = [
  "dask_databricks/__about__.py",
]

[tool.coverage.paths]
dask_databricks = ["dask_databricks", "*/dask-databricks/dask_databricks"]
tests = ["tests", "*/dask-databricks/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
